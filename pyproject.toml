[build-system]
requires = ["setuptools>=68.0", "wheel", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-client"
version = "0.1.0"
description = "Ein universeller LLM-Client fÃ¼r OpenAI, Groq und Ollama."
authors = [
  { name = "Daniel Gaida", email = "daniel.gaida@th-koeln.de" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "python-dotenv>=1.0.1",
  "openai>=1.51.0",
  "groq>=0.5.0",
  "ollama>=0.1.9"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.3.0",
  "pytest-cov>=5.0.0",
  "pytest-mock>=3.12.0",
  "pytest-asyncio>=0.23.0",
  "ruff>=0.5.0",
  "black>=24.0.0",
  "mypy>=1.8.0",
  "bandit>=1.7.0"
]
llama-index = [
  "llama-index-core>=0.10.0",
  "pydantic>=2.0.0"
]
all = [
  "llm-client[dev,llama-index]"
]

[tool.setuptools]
packages = ["llm_client"]
include-package-data = true

[tool.setuptools.package-data]
"llm_client" = ["*.env", "*.md"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-v --tb=short --cov=llm_client --cov-report=term-missing"
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "SIM", # flake8-simplify
]
ignore = [
  "E501", # line too long (handled by black)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests
"notebooks/*" = ["F401", "F821", "I001"]  # Ignore notebook issues
"llm_client/__init__.py" = ["F401"]  # Allow re-exports

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
no_strict_optional = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used in tests
